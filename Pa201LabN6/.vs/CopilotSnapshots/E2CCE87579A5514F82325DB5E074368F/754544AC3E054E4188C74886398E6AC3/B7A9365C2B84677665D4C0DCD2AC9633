using System;
using System.Threading;

namespace Pa201LabN6
{
    internal class CargoOrder
    {
        // Static field to generate unique incremental Ids in a thread-safe way
        private static int _nextId = 0;

        // Unique identifier for the cargo order (assigned automatically)
        public int Id { get; }

        // The customer to whom the order is for
        public int CustomerId { get; set; }

        // The courier who will deliver the order
        public int CourierId { get; set; }

        public CargoOrder(int customerId, int courierId = 0)
        {
            Id = Interlocked.Increment(ref _nextId);
            CustomerId = customerId;
            CourierId = courierId;
        }

        public override string ToString()
        {
            return $"CargoOrder {{ Id = {Id}, CustomerId = {CustomerId}, CourierId = {CourierId} }}";
        }
    }
}
